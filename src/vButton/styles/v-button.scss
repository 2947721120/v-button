/***************************************
  Ripple
 ***************************************/
 

/* Settings */
$ripple-color: rgba(255,255,255, 0.25) !default;
$ripple-effect-duration: 0.5s !default;


.Ripple {
  position: absolute;
  background: rgba(255,255,255, 0.25);
  border-radius: 100%;
  transform: scale(0.2);
  opacity: 0;
  pointer-events: none;
  z-index: 0;
  animation: Ripple-enter $ripple-effect-duration ease-out;
}


/* Animations
 ***************************************/
 
@keyframes Ripple-enter {
  0% {
    opacity: 1;
  }
  100% {
    transform: scale(2);
    opacity: 0;
  }
}



/***************************************
  BusyIdenticator
 ***************************************/
 

/* Settings */
$busy-identicator-color: white !default;
$busy-identicator-spin-duration: 0.75s !default;


%BusyIdenticator {
  content: '';
  width: 0.75em;
  height: 0.75em;
  display: inline-block;

  border: solid 2px transparent;
  border-top-color: $busy-identicator-color;
  border-left-color: $busy-identicator-color;
  border-radius: 50%;
  margin-right: 0.5em;

  animation: ProgressIdenticator-spin $busy-identicator-spin-duration linear infinite;
}


/* Animations
 ***************************************/
 
@keyframes ProgressIdenticator-spin {
  to {
    transform: rotate( 360deg );
  }
}



/***************************************
  Button
 ***************************************/
 

/* Settings */
$button-pressed-scale: scale(0.95) !default;
$button-transition: all 0.25s !default;


/**
 * Example HTML:
 *
  <button class="Button" ng-click="isBusy = !isBusy" v-busy="isBusy" v-busy-label="Please wait" v-pressable>
    <span>Submit</span>
  </button>
 */

 /**
 * Resoult HTML: if isBusy === true, and button is pressed
 *
  <button class="Button is-busy is-pressed" ng-click="isBusy = !isBusy" v-busy="isBusy" v-busy-label="Please wait" v-pressable>
    <span>Please wait</span>
    <span class="Ripple"></span>
  </button>
 */


.Button {
  overflow: hidden;
  position: relative;

  transition: $button-transition;

  &.is-pressed {
    transform: $button-pressed-scale;
  }

  &.is-busy {
    cursor: wait;

    &::before {
      @extend %BusyIdenticator;
    }
  }
}

